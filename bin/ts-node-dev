#!/usr/bin/env node

var dev = require('..');
var minimist = require('minimist');

var nodeArgs = []

var devArgs = process.argv.slice(2, 100);
var unknown = []
var opts = minimist(devArgs, {
  stopEarly: true,
  boolean: [
    'all-deps', 'deps', 'dedupe', 'poll', 'respawn', 'notify',
    'fast', 'disableWarnings', 'no-cache',
    'cache', 'type-check',
    'prefer-ts'    
  ],
  string: [
    'compiler', 'project', 'ignore',
    'skip-project',
    'skip-ignore',
    'ignoreWarnings',
    'ignoreDiagnostics',
    'cache-directory', 'compilerOptions',
    'compile-timeout',
    'ignore-watch'
  ],
  alias: {
    'fast': 'F',
    'ignoreDiagnostics': 'D',
    'ignoreWarnings': 'I',
    'compilerOptions': 'O',
    'compiler': 'C',
    'project': 'P'
  },
  default: { deps: true, notify: true },
  unknown: function (arg) {
    unknown.push(arg)
    return true
  }
});

var script = opts._[0]
var scriptArgs = opts._.slice(1)

unknown.forEach(function (arg, index) {
  if (arg === script) return
  nodeArgs.push(arg)
  var argName = arg.replace(/^-+/, '')

  var argOpts = opts[argName]
  var argValue = Array.isArray(argOpts) ? argOpts[index] : argValue;

  if (typeof argValue === 'string') {
    nodeArgs.push(argValue)
  }
})

if (!script) {
  console.log('Usage: ts-node-dev [options] script [arguments]\n');
  process.exit(1);
}

dev(script, scriptArgs, nodeArgs, opts);
